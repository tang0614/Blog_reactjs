{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  console.log(\"calling use storage\");\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n    storageRef.put(file).on(\"state_changed\", snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({\n        url,\n        createdAt\n      });\n      console.log(collectionRef.add({\n        url,\n        createdAt\n      }));\n      setUrl(\"storing to db\", url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/xinyutang/Dropbox/My Mac (MacBook-Pro.hsd1.ma.comcast.net)/Documents/react/xinyu-bakingblog/src/hook/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","console","log","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,oBAJP;;AAMA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMc,UAAU,GAAGb,cAAc,CAACc,GAAf,CAAmBV,IAAI,CAACW,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGf,gBAAgB,CAACgB,UAAjB,CAA4B,QAA5B,CAAtB;AAEAJ,IAAAA,UAAU,CAACK,GAAX,CAAed,IAAf,EAAqBe,EAArB,CACE,eADF,EAEGC,IAAD,IAAU;AACR,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAjB,MAAAA,WAAW,CAACe,UAAD,CAAX;AACD,KALH,EAMGG,GAAD,IAAS;AACPhB,MAAAA,QAAQ,CAACgB,GAAD,CAAR;AACD,KARH,EASE,YAAY;AACV,YAAMf,GAAG,GAAG,MAAMI,UAAU,CAACY,cAAX,EAAlB;AACA,YAAMC,SAAS,GAAGxB,SAAS,EAA3B;AACA,YAAMc,aAAa,CAACW,GAAd,CAAkB;AAAElB,QAAAA,GAAF;AAAOiB,QAAAA;AAAP,OAAlB,CAAN;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYI,aAAa,CAACW,GAAd,CAAkB;AAAElB,QAAAA,GAAF;AAAOiB,QAAAA;AAAP,OAAlB,CAAZ;AACAhB,MAAAA,MAAM,CAAC,eAAD,EAAkBD,GAAlB,CAAN;AACD,KAfH;AAiBD,GAtBQ,EAsBN,CAACL,IAAD,CAtBM,CAAT;AAwBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CA9BD;;AAgCA,eAAeJ,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  console.log(\"calling use storage\");\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        await collectionRef.add({ url, createdAt });\n        console.log(collectionRef.add({ url, createdAt }));\n        setUrl(\"storing to db\", url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}